import{a as p}from"./api-DwbFXHRK.js";const g=async(e,s,a)=>{const t=new URLSearchParams({page:String(e),limit:String(s)});return a&&t.append("search",a),(await p.get(`/shops?${t.toString()}`)).data},u=async e=>{const{photoFile:s,logoFile:a,...t}=e;let c;if(s||a){const r=new FormData;Object.keys(t).forEach(n=>{typeof t[n]=="object"?r.append(n,JSON.stringify(t[n])):r.append(n,t[n])}),s&&r.append("photo",s),a&&r.append("logo",a),c=r}else c=t;const d=await p.post("/shops",c,{headers:c instanceof FormData?{}:void 0});if(!d.data.success)throw new Error(d.data?.error?.message||"Failed to create shop");return d.data.data},f=async e=>{const{_id:s,photoFile:a,logoFile:t,removePhoto:c,removeLogo:d,...r}=e;let n;if(console.log("Shop update service - Input:",e),console.log("Shop update service - Fields to update:",Object.keys(r)),a||t||c||d){const o=new FormData;Object.keys(r).forEach(i=>{typeof r[i]=="object"?o.append(i,JSON.stringify(r[i])):o.append(i,r[i])}),a&&o.append("photo",a),t&&o.append("logo",t),c&&o.append("removePhoto","true"),d&&o.append("removeLogo","true"),n=o,console.log("Using FormData for shop update"),console.log("FormData entries:");for(let[i,h]of o.entries())console.log(`${i}:`,h)}else n=r,console.log("Using JSON for shop update:",n);try{const o=await p.put(`/shops/${s}`,n,{headers:n instanceof FormData?{}:void 0});if(!o.data.success)throw new Error(o.data?.error?.message||"Failed to update shop");return o.data.data}catch(o){throw console.error("Shop update failed:",o),console.error("Error response:",o.response?.data),o}},m=async e=>{const s=await p.delete(`/shops/${e}`);if(!s.data.success)throw new Error(s.data?.error?.message||"Failed to delete shop");return s.data.data},w=async()=>(await p.get("/shops")).data.data,S=async e=>(await p.get(`/shops/${e}`)).data,F=async e=>(await p.get(`/shops/${e}/couriers`)).data,y=async e=>(await p.get(`/shops/${e}/available-couriers`)).data,v=async(e,s)=>(await p.post(`/shops/${e}/couriers/${s}`)).data,$=async(e,s)=>(await p.delete(`/shops/${e}/couriers/${s}`)).data,b=async()=>(await p.get("/shops/groups/unassigned")).data.data;export{v as a,$ as b,u as c,m as d,F as e,y as f,g,S as h,b as i,w as j,f as u};
